#!/usr/bin/python
#
#                 iii
#                iii
#               iii
#
#           vvv iii uu      uu rrrrrrrr
#          vvvv iii uu      uu rr     rr
#   v     vvvv  iii uu      uu rr     rr
#  vvv   vvvv   iii uu      uu rr rrrrr
# vvvvv vvvv    iii uu      uu rr rrr
#  vvvvvvvv     iii uu      uu rr  rrr
#   vvvvvv      iii  uu    uu  rr   rrr
#    vvvv       iii   uuuuuu   rr    rrr
#
#   I N F O R M A T I O N    S Y S T E M
# ------------------------------------------------------------------------------
#
# Project:      ignite-docs-viur3
# Initiated:    2022-08-04 16:29:42
# Copyright:    tim @ Mausbrand Informationssysteme GmbH
# Author:       tim
#
# ------------------------------------------------------------------------------

from viur import core
from viur.core import conf, email, securityheaders
from viur.core.modules.file import thumbnailer
from collections import OrderedDict

# ------------------------------------------------------------------------------
# General configuration
#

conf["viur.validApplicationIDs"] = [
	"ignite-docs-viur3"
]

# ------------------------------------------------------------------------------
# Debugging & Performance
#

# conf["viur.disableCache"] = True
# conf["viur.debug.traceQueries"] = True
# conf["viur.debug.traceExternalCallRouting"] = True
# conf["viur.debug.traceExceptions"] = True

# ------------------------------------------------------------------------------
# File module
#

conf["viur.downloadUrlFor.expiration"] = 0
conf["viur.file.hmacKey"] = b"f863e8a9dd7349b8e9cc18286d507911"   #fixme: should be generated by ViUR core?
conf["viur.file.derivers"] = {
	"thumbnail": thumbnailer
}

conf["derives"] = {
	"thumbnail": [
		{"width": 1920},
		{"width": 1280},
		{"width": 900},
		{"width": 500}
	]
}

# ------------------------------------------------------------------------------
# Language-specific configuration
#

# conf["viur.languageMethod"] = "url"
# conf["viur.availableLanguages"] = ["en", "de"]

# ------------------------------------------------------------------------------
# ViUR admin tool specific configurations
#

conf["admin.vi.name"] = "ignite-docs-viur3"

# ------------------------------------------------------------------------------
# Email configuration
#

conf["viur.email.sendInBlue.apiKey"] = "xkeysib-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
conf["viur.email.transportClass"] = email.EmailTransportSendInBlue
# conf["viur.email.senderOverride"] = "mail@viur.dev"

# Email debugging config
# conf["viur.email.sendFromLocalDevelopmentServer"] = True  # enable sending emails from local development server
# conf["viur.email.recipientOverride"] = ["debug@viur.dev"]  # send all emails to this recipient

# ------------------------------------------------------------------------------
# Content Security Policy (CSP)
#


conf["docs.menu"] = [
	OrderedDict([
		[u"start", u"Start"],
		[u"gettingstarted", u"Getting Started"],
		[u"guidelines", u"Guidelines"],
		[u"components", u"Components"],
		[u"states", u"States"],
		[u"variables", u"Variables/Settings"],
		[u"mixins", u"Mixins"]
	]),
	OrderedDict([
		[u"bar", u"Bar"],
		[u"box", u"Boxes"],
		[u"buttons", u"Buttons"],
		[u"forms", u"Forms"],
		[u"messages", u"Messages"],
		[u"popout", u"Popouts"],
		[u"popup", u"Popup"],
		[u"tables", u"Table"],
		[u"types", u"Typography"]
	])
]


# GitHub Buttons
securityheaders.addCspRule("style-src", "unsafe-inline", "enforce")
securityheaders.addCspRule("style-src", "cdn.jsdelivr.net", "enforce")  # yes, GitHub buttons need this...
securityheaders.addCspRule("style-src", "fonts.googleapis.com", "enforce")
securityheaders.addCspRule("style-src", "accounts.google.com", "enforce")

securityheaders.addCspRule("script-src", "accounts.google.com", "enforce")
securityheaders.addCspRule("script-src", "cdn.jsdelivr.net", "enforce")

#securityheaders.addCspRule("font-src", "fonts.googleapis.com", "enforce")
securityheaders.addCspRule("font-src", "fonts.gstatic.com", "enforce")
# Enable this if you want to use the captcha, but not unsafe-inline:
# securityheaders.addCspRule("script-src", "sha256-TLq3i7CjxmHUoz+BrQ6w5D2+hv35BEkew240zhZ0uvA=", "enforce")

# ------------------------------------------------------------------------------
# Server startup
#

import modules
import render

app = core.setup(modules)
