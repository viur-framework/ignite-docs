@charset "UTF-8";
/* SPINNER */

// Based on SpinKit:
// https://github.com/tobiasahlin/SpinKit

@spinnerColor: @complementColor;
@spinnerBackColor: @complementColor;

.spinner-overlay {
  transition: background .7s ease;
  width: 100%;
  height: 0;
  background: fadeout(@spinnerBackColor, 100%);
  pointer-events: none;
}

.spinner {
  width: 20%;
  max-width: 100px;
  text-align: center;
  display: flex;
  padding: 5px;
  transition: all .7s ease;
  transition-delay: .7s;
  opacity: 0;
  left: 50%;
  user-select: none;
  transform: translate(-50%, -50%);
}

.spinner-square {
  flex: 1 1 auto;
  background-color: @spinnerColor;
  display: inline-block;
  margin: 0 2%;
  opacity: 0;
  user-select: none;
  &:after {
    content: '';
    width: 100%;
    padding-bottom: 100%;
    display: block;
  }
}

.is-busy {
  position: relative;
  min-height: 200px;
  & > .spinner-overlay {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border: 1px dashed @spinnerBackColor;
    position: absolute;
    background: fadeout(@spinnerBackColor, 65%);
    pointer-events: auto;
    .zIndex('overlay', 0);
    & .spinner {
      position: absolute;
      top: 50%;
      opacity: 1;
      .zIndex('overlay',1);
      & .spinner-square {
        animation: spin-square-ani 1.4s infinite ease-in-out both;
        &:nth-of-type(odd) {
          animation-delay: -0.32s;
        }
        &:nth-of-type(even) {
          animation-delay: -0.16s;
        }
        &:first-of-type {
          animation-delay: -0.48s;
        }
        &:last-of-type {
          animation-delay: 0s;
        }
      }
    }
  }
}

@keyframes spin-square-ani {
  0%, 80%, 100% {
    opacity: 0.2;
  } 40% {
    opacity: 1;
  }
}
