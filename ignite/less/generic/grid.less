@charset "UTF-8";
// GRID
// A simple way to build responsive columns.

// Prefixes and objects:
// .grid-
// .offset-

.grid(@gridSpace, @gridColumns) {
  // wrapper for columns
  &-row {
    display: block;
    margin: 0 0 @gridSpace;
    &:after {
      clear: both;
    };
    .mq-min(@breakMedium, {
      display: flex;
      margin-top: -@gridSpace;
      margin-left: -@gridSpace;
      margin-right: -@gridSpace;
      &:last-child {
        margin-bottom: -@gridSpace;
      };
    });
  }

  &-col {
    display: block;
    flex: 1 1 auto;
    width: 100%;
    padding: 0;
    margin: 0;
    &:not(:last-child) {
      margin-bottom: @gridSpace;
    }
    .mq-min(@breakMedium, {
      padding: @gridSpace;
    });
  }

  // auto generate different column sizes and offsets
  .generate-columns(@gridColumns);
  .generate-columns(@n, @i: 1) when (@i =< @n) {
    &-col-@{i} {
      width: (@i * 100% / @n);
      flex: none;
    }
    .offset-is-@{i} {
      margin-left: (@i * 100% / @n);
    }
    .generate-columns(@n, (@i + 1));
  }

  &-col-half {width: 50%;}
  &-col-one-third {width: 100 / 3%;}
  &-col-two-third {width: 100 / 3 * 2%;}
  &-col-one-quarter {width: 25%;}
  &-col-three-quarter {width: 75%;}

  .offset-is-half {margin-left: 50%;}
  .offset-is-one-third {margin-left: 100 / 3%;}
  .offset-is-two-third {margin-left: 100 / 3 * 2%;}
  .offset-is-one-quarter {margin-left: 25%;}
  .offset-is-three-quarter {margin-left: 75%;}
}
